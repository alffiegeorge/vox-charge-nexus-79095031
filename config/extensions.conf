
[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
; Global variables for billing system
BILLING_API_URL=http://localhost:3001/api
INTERNAL_CONTEXT=from-internal
EXTERNAL_CONTEXT=from-external

[from-internal]
; Internal calls from authenticated SIP endpoints
exten => _X.,1,NoOp(Internal call from ${CALLERID(num)} to ${EXTEN})
exten => _X.,n,Set(CUSTOMER_ID=${ODBC_SQL(SELECT customer_id FROM sip_credentials WHERE sip_username='${CALLERID(num)}')})
exten => _X.,n,GotoIf($["${CUSTOMER_ID}" = ""]?unauthorized,1)
exten => _X.,n,Set(CUSTOMER_STATUS=${ODBC_SQL(SELECT status FROM customers WHERE id='${CUSTOMER_ID}')})
exten => _X.,n,GotoIf($["${CUSTOMER_STATUS}" != "active"]?suspended,1)

; Check if customer has assigned DIDs for outbound calls
exten => _X.,n,Set(ASSIGNED_DID=${ODBC_SQL(SELECT number FROM did_numbers WHERE customer_id='${CUSTOMER_ID}' AND status='Active' LIMIT 1)})
exten => _X.,n,GotoIf($["${ASSIGNED_DID}" = ""]?no_did,1)
exten => _X.,n,Set(CALLERID(num)=${ASSIGNED_DID})
exten => _X.,n,NoOp(Using assigned DID ${ASSIGNED_DID} for outbound call)

; Billing checks and routing
exten => _X.,n,Set(CDR(accountcode)=${CUSTOMER_ID})
exten => _X.,n,NoOp(Routing outbound call from ${CUSTOMER_ID} to ${EXTEN})
exten => _X.,n,Dial(PJSIP/${EXTEN}@trunk,30)
exten => _X.,n,Hangup()

; Handle unauthorized calls
exten => unauthorized,1,NoOp(Unauthorized call attempt)
exten => unauthorized,n,Playback(ss-noservice)
exten => unauthorized,n,Hangup()

; Handle suspended accounts
exten => suspended,1,NoOp(Call from suspended account)
exten => suspended,n,Playback(your-account-suspended)
exten => suspended,n,Hangup()

; Handle customers without assigned DIDs
exten => no_did,1,NoOp(Customer has no assigned DID for outbound calls)
exten => no_did,n,Playback(feature-not-avail)
exten => no_did,n,Hangup()

[from-external]
; External calls coming into the system - route to assigned customers based on DID
exten => _X.,1,NoOp(External call to DID ${EXTEN})

; Remove any + prefix from the DID number
exten => _X.,n,Set(CLEAN_DID=${EXTEN})
exten => _X.,n,GotoIf($["${EXTEN:0:1}" != "+"]?skip_clean)
exten => _X.,n,Set(CLEAN_DID=${EXTEN:1})

exten => _X.,n(skip_clean),Set(DID_INFO=${ODBC_SQL(SELECT customer_id,status FROM did_numbers WHERE number='${EXTEN}' OR number='+${EXTEN}' OR number='${CLEAN_DID}')})
exten => _X.,n,GotoIf($["${DID_INFO}" = ""]?invalid_did,1)

; Parse DID info (customer_id,status)
exten => _X.,n,Set(DID_CUSTOMER_ID=${CUT(DID_INFO,\,,1)})
exten => _X.,n,Set(DID_STATUS=${CUT(DID_INFO,\,,2)})

; Check if DID is active and assigned
exten => _X.,n,GotoIf($["${DID_STATUS}" != "Active"]?suspended_did,1)
exten => _X.,n,GotoIf($["${DID_CUSTOMER_ID}" = ""]?unassigned_did,1)

; Get customer's SIP endpoint from DID routing table
exten => _X.,n,Set(ROUTE_INFO=${ODBC_SQL(SELECT destination_value FROM did_routes WHERE did_number='${EXTEN}' AND active=1)})
exten => _X.,n,GotoIf($["${ROUTE_INFO}" != ""]?route_by_table,1)

; Fallback: Get customer's SIP endpoint directly
exten => _X.,n,Set(CUSTOMER_SIP=${ODBC_SQL(SELECT sip_username FROM sip_credentials WHERE customer_id='${DID_CUSTOMER_ID}' AND status='active')})
exten => _X.,n,GotoIf($["${CUSTOMER_SIP}" = ""]?no_endpoint,1)
exten => _X.,n,Goto(route_to_sip,1)

; Route using the DID routing table
exten => _X.,n(route_by_table),Set(CUSTOMER_SIP=${ROUTE_INFO})
exten => _X.,n,Goto(route_to_sip,1)

; Route to customer's SIP endpoint
exten => _X.,n(route_to_sip),NoOp(Routing inbound DID ${EXTEN} to customer ${DID_CUSTOMER_ID} endpoint ${CUSTOMER_SIP})
exten => _X.,n,Set(CDR(accountcode)=${DID_CUSTOMER_ID})
exten => _X.,n,Dial(PJSIP/${CUSTOMER_SIP},30,r)
exten => _X.,n,Hangup()

; Handle invalid DID
exten => invalid_did,1,NoOp(Invalid DID: ${EXTEN})
exten => invalid_did,n,NoOp(No matching DID found in database)
exten => invalid_did,n,Playback(ss-noservice)
exten => invalid_did,n,Hangup()

; Handle suspended DID
exten => suspended_did,1,NoOp(Suspended DID: ${EXTEN})
exten => suspended_did,n,Playback(temp-out-of-service)
exten => suspended_did,n,Hangup()

; Handle unassigned DID
exten => unassigned_did,1,NoOp(Unassigned DID: ${EXTEN})
exten => unassigned_did,n,Playback(ss-noservice)
exten => unassigned_did,n,Hangup()

; Handle customer with no SIP endpoint
exten => no_endpoint,1,NoOp(Customer ${DID_CUSTOMER_ID} has no active SIP endpoint)
exten => no_endpoint,n,Playback(temp-out-of-service)
exten => no_endpoint,n,Hangup()

; Test extensions for troubleshooting
exten => 100,1,NoOp(Test extension 100)
exten => 100,n,Answer()
exten => 100,n,Playback(hello-world)
exten => 100,n,Hangup()

exten => 101,1,NoOp(Test extension 101)
exten => 101,n,Answer()
exten => 101,n,Playback(demo-congrats)
exten => 101,n,Hangup()
