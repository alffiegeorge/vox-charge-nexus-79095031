
[general]
static=yes
writeprotect=no
clearglobalvars=no

[globals]
; Global variables for billing system
BILLING_API_URL=http://localhost:3001/api
INTERNAL_CONTEXT=from-internal
EXTERNAL_CONTEXT=from-external

[from-internal]
; Internal calls from authenticated SIP endpoints
exten => _X.,1,NoOp(Internal call from ${CALLERID(num)} to ${EXTEN})
exten => _X.,n,Set(CUSTOMER_ID=${ODBC_SQL(SELECT customer_id FROM sip_credentials WHERE sip_username='${CALLERID(num)}')})
exten => _X.,n,GotoIf($["${CUSTOMER_ID}" = ""]?unauthorized,1)
exten => _X.,n,Set(CUSTOMER_STATUS=${ODBC_SQL(SELECT status FROM customers WHERE id='${CUSTOMER_ID}')})
exten => _X.,n,GotoIf($["${CUSTOMER_STATUS}" != "Active"]?suspended,1)

; Check if customer has assigned DIDs for outbound calls
exten => _X.,n,Set(ASSIGNED_DID=${ODBC_SQL(SELECT number FROM dids WHERE customer_id='${CUSTOMER_ID}' AND status='Active' LIMIT 1)})
exten => _X.,n,GotoIf($["${ASSIGNED_DID}" = ""]?no_did,1)
exten => _X.,n,Set(CALLERID(num)=${ASSIGNED_DID})
exten => _X.,n,NoOp(Using assigned DID ${ASSIGNED_DID} for outbound call)

; Billing checks
exten => _X.,n,AGI(billing-check.php,${CUSTOMER_ID},${EXTEN})
exten => _X.,n,GotoIf($["${BILLINGRESULT}" = "INSUFFICIENT_FUNDS"]?insufficient,1)
exten => _X.,n,Set(RATE_INFO=${ODBC_SQL(SELECT rate,connection_fee,minimum_duration,billing_increment FROM rates WHERE '${EXTEN}' LIKE CONCAT(prefix,'%') ORDER BY LENGTH(prefix) DESC LIMIT 1)})
exten => _X.,n,Set(CDR(accountcode)=${CUSTOMER_ID})
exten => _X.,n,Set(CDR(userfield)=${RATE_INFO})
exten => _X.,n,AGI(billing-start.php,${CUSTOMER_ID},${EXTEN},${RATE_INFO})
exten => _X.,n,Dial(SIP/trunk/${EXTEN},30,gM(billing-monitor))
exten => _X.,n,AGI(billing-end.php,${CUSTOMER_ID},${DIALSTATUS},${CDR(billsec)})
exten => _X.,n,Hangup()

; Handle unauthorized calls
exten => unauthorized,1,NoOp(Unauthorized call attempt)
exten => unauthorized,n,Playback(ss-noservice)
exten => unauthorized,n,Hangup()

; Handle suspended accounts
exten => suspended,1,NoOp(Call from suspended account)
exten => suspended,n,Playback(your-account-suspended)
exten => suspended,n,Hangup()

; Handle insufficient funds
exten => insufficient,1,NoOp(Insufficient funds)
exten => insufficient,n,Playback(insufficient-funds)
exten => insufficient,n,Hangup()

; Handle customers without assigned DIDs
exten => no_did,1,NoOp(Customer has no assigned DID for outbound calls)
exten => no_did,n,Playbook(feature-not-avail)
exten => no_did,n,Hangup()

[from-external]
; External calls coming into the system - route to assigned customers
exten => _X.,1,NoOp(External call to DID ${EXTEN})
exten => _X.,n,Set(DID_INFO=${ODBC_SQL(SELECT customer_id,status FROM dids WHERE number='${EXTEN}')})
exten => _X.,n,GotoIf($["${DID_INFO}" = ""]?invalid_did,1)

; Parse DID info (customer_id,status)
exten => _X.,n,Set(DID_CUSTOMER_ID=${CUT(DID_INFO,\,,1)})
exten => _X.,n,Set(DID_STATUS=${CUT(DID_INFO,\,,2)})

; Check if DID is active and assigned
exten => _X.,n,GotoIf($["${DID_STATUS}" != "Active"]?suspended_did,1)
exten => _X.,n,GotoIf($["${DID_CUSTOMER_ID}" = ""]?unassigned_did,1)

; Get customer's SIP endpoint
exten => _X.,n,Set(CUSTOMER_SIP=${ODBC_SQL(SELECT sip_username FROM sip_credentials WHERE customer_id='${DID_CUSTOMER_ID}' AND status='active')})
exten => _X.,n,GotoIf($["${CUSTOMER_SIP}" = ""]?no_endpoint,1)

; Route to customer's SIP endpoint
exten => _X.,n,NoOp(Routing inbound DID ${EXTEN} to customer ${DID_CUSTOMER_ID} endpoint ${CUSTOMER_SIP})
exten => _X.,n,Dial(PJSIP/${CUSTOMER_SIP},30)
exten => _X.,n,Hangup()

; Handle invalid DID
exten => invalid_did,1,NoOp(Invalid DID: ${EXTEN})
exten => invalid_did,n,Playback(ss-noservice)
exten => invalid_did,n,Hangup()

; Handle suspended DID
exten => suspended_did,1,NoOp(Suspended DID: ${EXTEN})
exten => suspended_did,n,Playback(temp-out-of-service)
exten => suspended_did,n,Hangup()

; Handle unassigned DID
exten => unassigned_did,1,NoOp(Unassigned DID: ${EXTEN})
exten => unassigned_did,n,Playback(ss-noservice)
exten => unassigned_did,n,Hangup()

; Handle customer with no SIP endpoint
exten => no_endpoint,1,NoOp(Customer ${DID_CUSTOMER_ID} has no active SIP endpoint)
exten => no_endpoint,n,Playback(temp-out-of-service)
exten => no_endpoint,n,Hangup()

[macro-billing-monitor]
; Macro to monitor call progress for real-time billing
exten => s,1,NoOp(Starting billing monitor for call)
exten => s,n,Set(MONITOR_EXEC=AGI(billing-monitor.php,${ARG1}))
exten => s,n,MacroExit()
